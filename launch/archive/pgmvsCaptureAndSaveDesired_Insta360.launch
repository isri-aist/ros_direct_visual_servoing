<launch>
  <!-- Start the camera and settings -->
  <!-- <include file="$(find insta360)/launch/bringup.launch"/> -->

  <!-- Resize the captured images to reduce the processing time -->
  <!-- <node name="image_resize" pkg="nodelet" type="nodelet" args="standalone image_proc/resize" output="screen">
    <remap from="image" to="/insta360/equi/image_raw" />
    <param name="scale_width" value="0.16" />
    <param name="scale_height" value="0.16" />
  </node>-->

  <!-- Start the desired image saving node for photometric visual servoing -->  
  <node name="pgmvsCaptureAndSaveDesired" pkg="ros_dvs_bridge" type="ros_dvs_bridge_pgmvsCaptureAndSaveDesired"/> <!-- launch-prefix="bash -c 'sleep $(arg node_start_delay); $0 $@' "> -->
    <!-- <param name="cameraTopic" type="string" value="/insta360/equi/image_raw"/> -->
    <param name="cameraTopic" type="string" value="/insta360/right/image_raw"/>
    <param name="logs" type="string" value="$(env HOME)/.ros/ros_dvs_bridge/"/>

    <param name="rosbagForEVS" type="bool" value="true"/>
    <param name="camera2tool" type="string" value="$(find ros_dvs_bridge)/config/insta360toWrist.yml"/>
    <param name="cameraPoseTopic" type="string" value="/tf"/>
    <param name="desiredPoseTopicForEVS" type="string" value="/vs/camera/desired_pose"/>
 

</launch>

