<launch>
  <!-- Start the camera and settings -->
  <!--
  <include file="$(find spinnaker_camera_driver)/launch/camera.launch"/>
  -->
  <!-- Determine this using rosrun spinnaker_camera_driver list_cameras.
       If not specified, defaults to first camera found. -->
  <arg name="camera_name"               default="camera" />
  <arg name="camera_serial"             default="0" />
  <arg name="calibrated"                default="0" />
  <arg name="device_type"               default="USB3" /> <!-- USB3 or GigE -->

  <!-- When unspecified, the driver will use the default framerate as given by the
      camera itself. Use the parameter 'control_frame_rate' to enable manual frame 
      rate control, and 'frame_rate' to set the frame rate value. -->
  <arg name="control_frame_rate"        default="True" />
  <arg name="frame_rate"                default="60" />

  <!-- Disabling ISP will dramatically increase frame-rate. However, it can only be 
      disabled when using Bayer encoding (e.g. BayerRG8)-->
  <arg name="isp_enable"                default="False" /> 
  <arg name="encoding"                  default="Mono8" />
  <arg name="color_balance"             default="Off" /> <!-- Off, Once, or Continuous -->
  <!-- Available Encodings:
        Mono:              YUV:              YCbCr:          Other:
        - Mono8            - YUV411Packed    - YCbCr8        - BGR8
        - Mono16           - YUV422Packed    - YCbCr422_8    - BGRa8
        - Mono12p          - YUV444Packed    - YCbCr411_8    - RGB8Packed
        - Mono12Packed

        Bayer:
        - BayerGR8         - BayerGR12p
        - BayerRG8         - BayerRG12p
        - BayerGB8         - BayerGB12p
        - BayerBG8         - BayerBG12p
        - BayerGR16        - BayerGR12Packed
        - BayerRG16        - BayerRG12Packed
        - BayerGB16        - BayerGB12Packed
        - BayerBG16        - BayerBG12Packed
  -->

  <group ns="$(arg camera_name)">
    <!-- Nodelet manager -->
    <node pkg="nodelet" type="nodelet" name="camera_nodelet_manager" args="manager" cwd="node" output="screen"/>
->
    <!-- Camera nodelet -->
    <node pkg="nodelet" type="nodelet" name="spinnaker_camera_nodelet"
          args="load spinnaker_camera_driver/SpinnakerCameraNodelet camera_nodelet_manager" >

      <param name="frame_id"                        value="$(arg camera_name)" />
      <param name="serial"                          value="$(arg camera_serial)" />
      <param name="device_type"                     value="$(arg device_type)" />

      <!-- Frame rate -->
      <param name="acquisition_frame_rate_enable"   value="$(arg control_frame_rate)" />
      <param name="acquisition_frame_rate"          value="$(arg frame_rate)" />

      <!-- Image Processing -->
      <param name="isp_enable"                      value="$(arg isp_enable)" />
      <param name="auto_white_balance"              value="$(arg color_balance)" />
      <param name="image_format_color_coding"       value="$(arg encoding)" />

      <!-- Image Resolution -->
      <!-- Height and width pixel size cannot be set directly. Instead use the 
          binning, offset, and region of interest options. 
          - RoI: range of pixels to select from original image
                (Note: RoI is defined from image pixel origin (i.e. top left))
          - Binning: reduces resolution by a factor of 1, 2, 4, or 8
          - Offset: moves the pixel origin
                x-offset = max_width/x_binning - roi_width/2
                y-offset = max_height/y_binning - roi_height/2
      -->
      
      <param name="image_format_x_binning" value="2" />
      <param name="image_format_y_binning" value="2" />
			<!--      
			<param name="image_format_x_offset" value="128" />
      <param name="image_format_y_offset" value="122" />
      <param name="image_format_roi_width" value="1280" />
      <param name="image_format_roi_height" value="720" />
      -->

      <!-- Use the camera_calibration package to create this file -->
      <param name="camera_info_url" if="$(arg calibrated)"
             value="file://$(env HOME)/.ros/camera_info/$(arg camera_serial).yaml" />
    </node>

    <!-- Debayering nodelet -->
    <node pkg="nodelet" type="nodelet" name="image_proc_debayer"
          args="load image_proc/debayer camera_nodelet_manager">
    </node>
  </group>
  
  <!-- Resize the captured images to reduce the processing time -->
  <node name="image_resize" pkg="nodelet" type="nodelet" args="standalone image_proc/resize" output="screen">
  	<remap from="image" to="/camera/image_mono" />
    <param name="scale_width" value="0.25" />
    <param name="scale_height" value="0.25" />
  	<!-- <param name="scale_width" value="0.0625" />
  	<param name="scale_height" value="0.0625" /> -->
  </node>

  <!-- Start the photometric visual servoing node for a specific camera-->  
  <node name="pgmvsPGMVisualServoing" pkg="ros_dvs_bridge" type="ros_dvs_bridge_pgmvsVisualServoing"/>
  	<param name="cameraTopic" type="string" value="/image_resize/image"/> 
  	<param name="robotTopic" type="string" value="/twist_controller/command"/> 
  	<param name="diffTopic" type="string" value="/pgmvs/diff_image"/>
    <param name="featuresDiffTopic" type="string" value="/pgmvs/diff_features"/>
    <param name="featuresImageTopic" type="string" value="/pgmvs/image_features"/>
    <param name="desiredFeaturesImageTopic" type="string" value="/pgmvs/desired_image_features"/>

    <param name="cameraType" type="int" value="0"/> <!--     Omni: 0, Persp: 1, Equirectangular: 4 -->
    <!-- <param name="cameraXml" type="string" value="$(find ros_dvs_bridge)/config/insta360_one_x2/calib_equi_184_92.xml"/>
    <param name="lambda_g" type="double" value="1.91" and "0.805"/> -->
    <param name="cameraXml" type="string" value="$(find ros_dvs_bridge)/config/FL3-U3-13E4C/calib_omni_160_128.xml"/>
    <!-- <param name="cameraXml" type="string" value="$(find ros_dvs_bridge)/config/FL3-U3-13E4C/calib_omni_40_32.xml"/> -->
    <param name="lambda_g" type="double" value="1.805"/> 

  	<param name="logs" type="string" value="$(env HOME)/.ros/ros_dvs_bridge/"/>

    <param name="lambda" type="double" value="0.50"/> 

    <param name="sceneDepth" type="double" value="1"/> 

    <param name="camera2tool" type="string" value="$(find ros_dvs_bridge)/config/FL3-U3toTool.yml"/>
    <param name="controlInBaseFrame" type="bool" value="true"/>
    <param name="cameraPoseTopic" type="string" value="/tf"/>

    <param name="rosbagForEVS" type="bool" value="true"/>
    <param name="currentPoseTopicForEVS" type="string" value="/vs/camera/current_pose"/>
    
  <!-- </node> -->

</launch>

