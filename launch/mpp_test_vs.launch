<launch>

<!-- Start the photometric visual servoing node for a specific camera-->  
  <node name="mppvsMPPVisualServoing" pkg="ros_dvs_bridge" type="ros_dvs_bridge_mppvsVisualServoing" output="screen"/>
  	<param name="cameraTopic" type="string" value="/insta360/equi/image_raw"/> 
  	<param name="robotTopic" type="string" value="/twist_controller/command"/> 
  	<param name="diffTopic" type="string" value="/mppvs/diff_image"/>
    <param name="featuresDiffTopic" type="string" value="/mppvs/diff_features"/>
    <param name="featuresImageTopic" type="string" value="/mppvs/image_features"/>
    <param name="desiredFeaturesImageTopic" type="string" value="/mppvs/desired_image_features"/>

    <param name="cameraType" type="int" value="1"/>  <!-- 0 for dual fisheye and 1 for equirectangular -->
    <param name="cameraXml" type="string" value="$(find ros_dvs_bridge)/config/insta360_one_x2/calib_equi_184_92.xml"/><!--Change intrinsic xml here -->
    <param name="lambda_g" type="double" value="0.25"/> 

  	<param name="logs" type="string" value="$(env HOME)/.ros/ros_dvs_bridge/"/>

    <param name="lambda" type="double" value="0.5"/> 
    <param name="subdivLevel" type="int" value="4"/> 
    
    <param name="sceneDepth" type="double" value="1.0"/> 

    <param name="camera2tool" type="string" value="$(find ros_dvs_bridge)/config/insta360toTool.yml"/>
    <param name="controlInBaseFrame" type="bool" value="true"/>
    <param name="cameraPoseTopic" type="string" value="/tf"/>
  <!-- </node> -->

</launch>